image: "erlang:23.0"

services:
  - postgres:9.2-alpine
  - mysql:5.6
  - redis
  - memcached
  - mongo
  - name: bitnami/redis-sentinel
    alias: redis-sentinel

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - plts
    - plts_base

variables:
  FF_NETWORK_PER_BUILD: 1
  POSTGRES_DB: vmq_test_database
  POSTGRES_USER: vmq_test_user
  POSTGRES_PASSWORD: "vmq_test_password"
  POSTGRES_HOST_AUTH_METHOD: trust
  MYSQL_DATABASE: "vmq_test_database"
  MYSQL_ALLOW_EMPTY_PASSWORD: "yes"

stages:
  - test
  - release
  - feature-release

test:
  stage: test
  variables:
    RETRY_SPEC_DIR_REL_PATH: /_build/all_tests+test/logs
  before_script:
    - apt-get update -y && apt-get install -y libsnappy-dev default-mysql-client pcregrep
    - mkdir -p $CI_PROJECT_DIR$RETRY_SPEC_DIR_REL_PATH
    - mysql --host=mysql -e "CREATE USER 'vmq_test_user' IDENTIFIED BY 'vmq_test_password';" -uroot
    - mysql --host=mysql -e "GRANT ALL PRIVILEGES ON * . * TO 'vmq_test_user';" -uroot
    - epmd -daemon
  script:
    - ./rebar3 as all_tests do dialyzer, eunit, ct ||
      (echo -e "\nContents of retry.spec\n" &&
      cat $CI_PROJECT_DIR$RETRY_SPEC_DIR_REL_PATH/retry.spec &&
      echo -e "\nRetry suites:" &&
      echo $(pcregrep -o2 -o3 --om-separator="/" -M "^{(cases|groups),\"(.+)\",[^\w]*(\w+),(.|\n)*?\.$" $CI_PROJECT_DIR$RETRY_SPEC_DIR_REL_PATH/retry.spec | paste -s -d, -) &&
      ./rebar3 ct --suite=$(pcregrep -o2 -o3 --om-separator="/" -M "^{(cases|groups),\"(.+)\",[^\w]*(\w+),(.|\n)*?\.$" $CI_PROJECT_DIR$RETRY_SPEC_DIR_REL_PATH/retry.spec | paste -s -d, -))
  except:
    - /.*feature.*/

docker-release:
  stage: release
  only:
    - /^(?P<major>\d+\.)?(?P<minor>\d+\.)?(?P<patch>\*|\d+)(?:-(?P<mod>(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?$/
  except:
    - branches
  needs:
    - test
  script:
    - >
      docker build
      -t artifactory-gojek.golabs.io:6555/$CI_PROJECT_NAME:latest
      -t artifactory-gojek.golabs.io:6555/$CI_PROJECT_NAME:$CI_COMMIT_TAG
      -f docker/Dockerfile .
    - docker push artifactory-gojek.golabs.io:6555/$CI_PROJECT_NAME:latest
    - docker push artifactory-gojek.golabs.io:6555/$CI_PROJECT_NAME:$CI_COMMIT_TAG
  tags:
    - docker
    - docker_artifactory

feature-release:
  stage: feature-release
  only:
    - /.*feature.*/
  script:
    - >
      docker build
      -t artifactory-gojek.golabs.io:6555/$CI_PROJECT_NAME:$CI_COMMIT_SHORT_SHA
      -f docker/Dockerfile .
    - docker push artifactory-gojek.golabs.io:6555/$CI_PROJECT_NAME:$CI_COMMIT_SHORT_SHA
  tags:
      - docker
      - docker_artifactory
